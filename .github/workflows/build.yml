# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Flask App CI/CD

on:
  push:
    tags:
      - 'v*.*.*'

env:
  DOCKER_LOGIN: simple2b
  IMAGE_NAME: simple2b/site-s2b-admin
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  # DEPLOY_HOST: ${{ secrets.DEVELOP_HOST }}
  # DEPLOY_USER_NAME: ${{ secrets.DEVELOP_USERNAME }}
  # DEPLOY_SSH_KEY: ${{ secrets.DEVELOP_SSH_KEY }}

jobs:
  tests:
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.11]
        poetry-version: [1.5.1]
        os: [Linux]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4.1.0 # copy repository to runner
        with:
          submodules: true
      - name: Set up Python
        uses: actions/setup-python@v4 # install python
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up Poetry
        uses: abatilo/actions-poetry@v2.3.0 # install poetry
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: |
          poetry install
      - name: Lint
        run: |
          poetry run flake8 . --count --show-source --statistics
          poetry run flake8 . --count --exit-zero --max-complexity=10 --statistics
          poetry run mypy .
      - name: Run Flask tests
        run: |
          poetry run pytest
  build:
    strategy:
      fail-fast: false # if one of the matrix fails
      matrix:
        python-version: [3.11]
        poetry-version: [1.5.1]
        os: [Linux]
    runs-on: ${{ matrix.os }}
    needs: tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.0
        with:
          submodules: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Docker meta
        id: meta_admin
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.IMAGE_NAME }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_LOGIN }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta_admin.outputs.tags }}
          labels: ${{ steps.meta_admin.outputs.labels }}

  # deploy:
  #   runs-on: Linux
  #   needs: build
  #   steps:
  #     - name: Deploy flask.app
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.SSH_HOST_IP_PROD }}
  #         username: ${{ secrets.SSH_USER }}
  #         key: ${{ secrets.SSH_KEY }}
  #         port: ${{ secrets.SSH_PORT }}
  #         script: |
  #           cd app
  #           ./up
